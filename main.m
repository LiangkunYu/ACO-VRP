%--------------------------------------------------------------------------
%% ????????
% ????????????
clear all
clc
% ????????????????
t0 = clock;
%????????
citys=xlsread('citys.xlsx');
n = 21;% number of citys
%% ??????????????????
Distance = citys(2:22,2:22);
for i=1:21
    for j=1:i-1
        Distance(i,j)=Distance(j,i);
    end
    Distance(i,i)=1e-4;
end
%????????????????????
Needs=zeros(1,n);%??????
Service_time=zeros(1,n);%????????
for k=2:n
    Needs(k)=citys(23+k,2);
    Service_time(k)=citys(23+k,4);
end%??????????0????????????????????

%city=

City=struct(...
    'n',n,...
    'Needs',Needs,...
    'needs',Needs,... 
    'Service_time',Service_time,...
    'Distance',Distance);
%% ??????????
m = 175;                              % ????????
alpha = 0.1;                         % ??????????????????
beta = 5;                            % ????????????????????
vol = 2;                             % ??????????(volatilization)????
Q = 10;                              % ??????
flag=1;                              % 1????????????????????0??????????????????
%% ??????????
Heu_F = 1./Distance;                 % ????????(heuristic function)
Tau = ones(n,n);                     % ??????????
tri=1;                               % ????????????????????
addition=20;                         % ??????????????????
Load_Max=9; 
Table = zeros(m,n+addition);         % ??????????
Table_load=zeros(m,n+addition);      % ??????????????
Table_sevice_time=zeros(m,n+addition); % ??????????????
iter = 1;                            % ????????????
iter_max = 150;                      % ???????????? 
Route_best_length = zeros(iter_max,n+addition);  % ????????????       
Length_best = zeros(iter_max,1);     % ??????????????????????????  
Length_ave = zeros(iter_max,1);      % ??????????????????  
Limit_iter = 0;                      % ??????????????????
Route_best_price = zeros(iter_max,n+addition);% ????????????????????       
Price_best = zeros(iter_max,1);     % ??????????????????  
Price_ave = zeros(iter_max,1);      % ??????????????????  
%-------------------------------------------------------------------------
%% ????????????????
while iter <= iter_max
      start=ones(m,1);
      % ??1??????
      Table(:,1) = start;       
      citys_index = 1:n;
      % ????????????????
      for i = 1:m
          City.needs=City.Needs;                   
            allow_index=ones(1,n);%????????????????
            allow_index(1)=0;
            allow_index=logical(allow_index);           
            load=Load_Max;
          % ????????????????
         for j = 2:n+addition
         

             has_visited = Table(i,1:(j - 1));           % ????????????????
             %allow_index = ~ismember(citys_index,has_visited);    % ????????1????????????

             %allow_index=ismember(citys_index,find(City.needs~=0)) ;%??????????????????
%              b=   City.needs(has_visited(end));
%              c=load;
             if has_visited(end)==1
                    load=Load_Max;
                    City.needs(1)=0;
                    allow_index=ismember(citys_index,find(City.needs~=0)) ;%????????????????????????1????????????
                    Table_sevice_time(i,(j-1))=0;
                else City.needs(1)=1;
                    if load>=City.needs(has_visited(end))%????????????????
                        load=load-City.needs(has_visited(end));
                        City.needs(has_visited(end))=0;
                        allow_index=ismember(citys_index,find(City.needs~=0)) ;%??????????????????
                        Table_sevice_time(i,(j-1))=Service_time(has_visited(end));
                        if load==City.needs(has_visited(end))%????????????????????0??????????????????????????????
                            allow_index=zeros(1,n);
                            allow_index(1)=1;
                            allow_index=logical(allow_index);
                        end
                    else %??????????????????????
                        allow_index=zeros(1,n);
                        allow_index(1)=1;%??????0??????????????????????????????
                        allow_index=logical(allow_index);
                        
                        Table_sevice_time(i,(j-1))=Service_time(has_visited(end))*load/City.needs(has_visited(end));                        
                        City.needs(has_visited(end))=City.needs(has_visited(end))-load;
                        load=0;
                    end
             end              
             Table_load(i,(j - 1))=load;   %????????????????????????             
             allow = citys_index(allow_index);  % ????????????????
             P = allow; % ??????????????????            
             for k = 1:length(allow)
                 P(k) = Tau(has_visited(end),allow(k))^alpha * Heu_F(has_visited(end),allow(k))^beta;
             end
             P = P/sum(P);
             % ??????????????????????????
            Pc = cumsum(P);     %????2(????????)
            target_index = find(Pc >= rand);
            target = allow(target_index(1));
            Table(i,j) = target;
            
            if find(City.needs)==1
                break
            end
         end
      end

%% price & length
table=struct('Table',Table,...
             'Table_load',Table_load,...
             'm',m,...
             'Table_sevice_time',Table_sevice_time);
    %Length=cost(Table,Table_load,Distance,m,needs,Service);
    [Price,Length]=cost(table,City);
      
%% ????????????   % ??????????????????????????
    if flag==0 
      if iter == 1
          [min_Length,min_index] = min(Length);
          Length_best(iter) = min_Length;  
          Length_ave(iter) = mean(Length);
          Route_best_length(iter,:) = Table(min_index,:);
          Limit_iter = 1; 
      else
          [min_Length,min_index] = min(Length);%??????????  
          Length_best(iter) = min(Length_best(iter - 1),min_Length);
          Length_ave(iter) = mean(Length);
          if Length_best(iter) == min_Length     %????????????????????????  
              Route_best_length(iter,:) = Table(min_index,:);%??????????????????  
              Limit_iter = iter; 
          else
              Route_best_length(iter,:) = Route_best_length((iter-1),:);
          end
      end
      % ??????????
      Delta_Tau = zeros(n,n);
      % ????????????
      for i = 1:m
          % ????????????
          for j = 1:(n - 1)
              Delta_Tau(Table(i,j),Table(i,j+1)) = Delta_Tau(Table(i,j),Table(i,j+1)) + Q/Length(i);
          end
          Delta_Tau(Table(i,n),Table(i,1)) = Delta_Tau(Table(i,n),Table(i,1)) + Q/Length(i);
      end

    %% ????????????      % ??????????????????????????
    else 
      if iter == 1
          [min_Price,min_index] = min(Price);
          Price_best(iter) = min_Price;  
          Price_ave(iter) = mean(Price);
          Route_best_price(iter,:) = Table(min_index,:);
          Limit_iter = 1;   
      else
          [min_Price,min_index] = min(Price);%??????????  
          Price_best(iter) = min(Price_best(iter - 1),min_Price);
          Price_ave(iter) = mean(Price);
          if Price_best(iter) == min_Price     %????????????????????????  
              Route_best_price(iter,:) = Table(min_index,:);%??????????????????  
              Limit_iter = iter; 
          else
              Route_best_price(iter,:) = Route_best_price((iter-1),:);
          end
      end
      % ??????????
      Delta_Tau = zeros(n,n);
      % ????????????
      for i = 1:m
          % ????????????
          for j = 1:(n - 1)
              Delta_Tau(Table(i,j),Table(i,j+1)) = Delta_Tau(Table(i,j),Table(i,j+1)) + Q/Price(i);
          end
          Delta_Tau(Table(i,n),Table(i,1)) = Delta_Tau(Table(i,n),Table(i,1)) + Q/Price(i);
      end
    end
    %%
      Tau = (1-vol) * Tau + Delta_Tau;
    % ??????????1????????????????
    iter = iter + 1;
    Table = zeros(m,n+addition);
    Table_load=zeros(m,n+addition);      % ??????????????
    Table_sevice_time=zeros(m,n+addition); % ??????????????
end
%--------------------------------------------------------------------------
%% ????????
Time_Cost=etime(clock,t0);
if flag==0
[Shortest_Length,index] = min(Length_best);
Shortest_Route_length = Route_best_length(index,:);

disp(['????????:' num2str(Shortest_Length)]);
disp(['????????:' num2str(Shortest_Route_length(find(Shortest_Route_length)) )]);
disp(['????????????:' num2str(Limit_iter)]);
disp(['????????????:' num2str(Time_Cost) '??']);
figure(1)
plot(1:iter_max,Length_best,'b')
legend('????????')
xlabel('????????')
ylabel('????')
title('????????????')
else 
[Shortest_Price,index] = min(Price_best);
Shortest_Route_price = Route_best_price(index,:);
disp(['????????:' num2str(Shortest_Price)]);
disp(['????????:' num2str(Shortest_Route_price(find(Shortest_Route_price)) )]);
disp(['????????????:' num2str(Limit_iter)]);
disp(['????????????:' num2str(Time_Cost) '??']);
figure(2)
plot(1:iter_max,Price_best,'b')
legend('????????')
xlabel('????????')
ylabel('????')
title('????????????')
end

%% ??????????????
% 1. ismember????????????????????????????????????????????????????0-1??????
% 2. cumsum????????????????????????????????A=[1, 2, 3, 4, 5], ????cumsum(A)=[1, 3, 6, 10, 15]??

